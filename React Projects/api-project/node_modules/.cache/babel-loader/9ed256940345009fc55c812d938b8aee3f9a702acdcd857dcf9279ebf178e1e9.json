{"ast":null,"code":"var _jsxFileName = \"D:\\\\important\\\\122\\\\Projects\\\\React-js-Projects\\\\React Projects\\\\api-project\\\\src\\\\Components\\\\Dropdown.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// const Dropdown = () => {\n//   const [selectedOption, setSelectedOption] = useState('');\n\n//   const handleChange = (event) => {\n//     setSelectedOption(event.target.value);\n//   };\n\n//   return (\n//     <div>\n//         <h1>Praful Task...</h1>\n//       <select value={selectedOption} onChange={handleChange}>\n//         <option value=\"\">Select an option</option>\n//         <option value=\"option1\">Soham</option>\n//         <option value=\"option2\">Praful</option>\n//         <option value=\"option3\">Bharti</option>\n//       </select>\n//       {selectedOption && <p>You selected: {selectedOption}</p>}\n//     </div>\n//   );\n// };\n\n// export default Dropdown;\n\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const options = [{\n    value: 'option1',\n    label: 'Option 1'\n  }, {\n    value: 'option2',\n    label: 'Option 2'\n  }, {\n    value: 'option3',\n    label: 'Option 3'\n  }];\n  const dropdownRef = useRef();\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleCheckboxChange = (event, optionValue) => {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      setSelectedOptions([...selectedOptions, optionValue]);\n    } else {\n      setSelectedOptions(selectedOptions.filter(option => option !== optionValue));\n    }\n  };\n  const handleCancelOption = optionValue => {\n    setSelectedOptions(selectedOptions.filter(option => option !== optionValue));\n  };\n  const handleOutsideClick = event => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n\n  // Add an event listener to detect clicks outside the dropdown and close it\n  React.useEffect(() => {\n    document.addEventListener('click', handleOutsideClick);\n    return () => {\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-dropdown\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-header\",\n      onClick: toggleDropdown,\n      children: \"Select options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-options\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: option.value,\n          checked: selectedOptions.includes(option.value),\n          onChange: event => handleCheckboxChange(event, option.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), option.label]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), selectedOptions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Selected options:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedOptions.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [option, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCancelOption(option),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 26\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Dropdown, \"Jdf2t11lRXwoupkKSdBooon1by0=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Dropdown","_s","isOpen","setIsOpen","selectedOptions","setSelectedOptions","options","value","label","dropdownRef","toggleDropdown","handleCheckboxChange","event","optionValue","isChecked","target","checked","filter","option","handleCancelOption","handleOutsideClick","current","contains","useEffect","document","addEventListener","removeEventListener","className","ref","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","type","includes","onChange","length","_c","$RefreshReg$"],"sources":["D:/important/122/Projects/React-js-Projects/React Projects/api-project/src/Components/Dropdown.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// const Dropdown = () => {\r\n//   const [selectedOption, setSelectedOption] = useState('');\r\n\r\n//   const handleChange = (event) => {\r\n//     setSelectedOption(event.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//         <h1>Praful Task...</h1>\r\n//       <select value={selectedOption} onChange={handleChange}>\r\n//         <option value=\"\">Select an option</option>\r\n//         <option value=\"option1\">Soham</option>\r\n//         <option value=\"option2\">Praful</option>\r\n//         <option value=\"option3\">Bharti</option>\r\n//       </select>\r\n//       {selectedOption && <p>You selected: {selectedOption}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dropdown;\r\n\r\nimport React, { useState, useRef } from 'react';\r\n\r\nconst Dropdown = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n\r\n  const options = [\r\n    { value: 'option1', label: 'Option 1' },\r\n    { value: 'option2', label: 'Option 2' },\r\n    { value: 'option3', label: 'Option 3' },\r\n  ];\r\n\r\n  const dropdownRef = useRef();\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleCheckboxChange = (event, optionValue) => {\r\n    const isChecked = event.target.checked;\r\n\r\n    if (isChecked) {\r\n      setSelectedOptions([...selectedOptions, optionValue]);\r\n    } else {\r\n      setSelectedOptions(selectedOptions.filter((option) => option !== optionValue));\r\n    }\r\n  };\r\n\r\n  const handleCancelOption = (optionValue) => {\r\n    setSelectedOptions(selectedOptions.filter((option) => option !== optionValue));\r\n  };\r\n\r\n  const handleOutsideClick = (event) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  // Add an event listener to detect clicks outside the dropdown and close it\r\n  React.useEffect(() => {\r\n    document.addEventListener('click', handleOutsideClick);\r\n    return () => {\r\n      document.removeEventListener('click', handleOutsideClick);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"custom-dropdown\" ref={dropdownRef}>\r\n      <div className=\"dropdown-header\" onClick={toggleDropdown}>\r\n        Select options\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"dropdown-options\">\r\n          {options.map((option) => (\r\n            <label key={option.value}>\r\n              <input\r\n                type=\"checkbox\"\r\n                value={option.value}\r\n                checked={selectedOptions.includes(option.value)}\r\n                onChange={(event) => handleCheckboxChange(event, option.value)}\r\n              />\r\n              {option.label}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      )}\r\n      {selectedOptions.length > 0 && (\r\n        <div className=\"selected-options\">\r\n          <p>Selected options:</p>\r\n          <ul>\r\n            {selectedOptions.map((option) => (\r\n              <li key={option}>\r\n                {option} <button onClick={() => handleCancelOption(option)}>Cancel</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}