{"ast":null,"code":"var _jsxFileName = \"D:\\\\important\\\\122\\\\Projects\\\\React-js-Projects\\\\React Projects\\\\api-project\\\\src\\\\Components\\\\Dropdown.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// const Dropdown = () => {\n//   const [selectedOption, setSelectedOption] = useState('');\n\n//   const handleChange = (event) => {\n//     setSelectedOption(event.target.value);\n//   };\n\n//   return (\n//     <div>\n//         <h1>Praful Task...</h1>\n//       <select value={selectedOption} onChange={handleChange}>\n//         <option value=\"\">Select an option</option>\n//         <option value=\"option1\">Soham</option>\n//         <option value=\"option2\">Praful</option>\n//         <option value=\"option3\">Bharti</option>\n//       </select>\n//       {selectedOption && <p>You selected: {selectedOption}</p>}\n//     </div>\n//   );\n// };\n\n// export default Dropdown;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = () => {\n  _s();\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const options = [{\n    value: 'option1',\n    label: 'Option 1'\n  }, {\n    value: 'option2',\n    label: 'Option 2'\n  }, {\n    value: 'option3',\n    label: 'Option 3'\n  }];\n  const handleCheckboxChange = (event, optionValue) => {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      setSelectedOptions([...selectedOptions, optionValue]);\n    } else {\n      setSelectedOptions(selectedOptions.filter(option => option !== optionValue));\n    }\n  };\n  const handleCancelOption = optionValue => {\n    setSelectedOptions(selectedOptions.filter(option => option !== optionValue));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: option.value,\n          checked: selectedOptions.includes(option.value),\n          onChange: event => handleCheckboxChange(event, option.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), option.label]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), selectedOptions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Selected options:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedOptions.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [option, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCancelOption(option),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 26\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Dropdown, \"S24nRharoliKpDmkOrz7zqRL0rI=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dropdown","_s","selectedOptions","setSelectedOptions","options","value","label","handleCheckboxChange","event","optionValue","isChecked","target","checked","filter","option","handleCancelOption","children","map","type","includes","onChange","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","_c","$RefreshReg$"],"sources":["D:/important/122/Projects/React-js-Projects/React Projects/api-project/src/Components/Dropdown.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// const Dropdown = () => {\r\n//   const [selectedOption, setSelectedOption] = useState('');\r\n\r\n//   const handleChange = (event) => {\r\n//     setSelectedOption(event.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//         <h1>Praful Task...</h1>\r\n//       <select value={selectedOption} onChange={handleChange}>\r\n//         <option value=\"\">Select an option</option>\r\n//         <option value=\"option1\">Soham</option>\r\n//         <option value=\"option2\">Praful</option>\r\n//         <option value=\"option3\">Bharti</option>\r\n//       </select>\r\n//       {selectedOption && <p>You selected: {selectedOption}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dropdown;\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst Dropdown = () => {\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n\r\n  const options = [\r\n    { value: 'option1', label: 'Option 1' },\r\n    { value: 'option2', label: 'Option 2' },\r\n    { value: 'option3', label: 'Option 3' },\r\n  ];\r\n\r\n  const handleCheckboxChange = (event, optionValue) => {\r\n    const isChecked = event.target.checked;\r\n\r\n    if (isChecked) {\r\n      setSelectedOptions([...selectedOptions, optionValue]);\r\n    } else {\r\n      setSelectedOptions(selectedOptions.filter((option) => option !== optionValue));\r\n    }\r\n  };\r\n\r\n  const handleCancelOption = (optionValue) => {\r\n    setSelectedOptions(selectedOptions.filter((option) => option !== optionValue));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {options.map((option) => (\r\n          <label key={option.value}>\r\n            <input\r\n              type=\"checkbox\"\r\n              value={option.value}\r\n              checked={selectedOptions.includes(option.value)}\r\n              onChange={(event) => handleCheckboxChange(event, option.value)}\r\n            />\r\n            {option.label}\r\n          </label>\r\n        ))}\r\n      </div>\r\n      {selectedOptions.length > 0 && (\r\n        <div>\r\n          <p>Selected options:</p>\r\n          <ul>\r\n            {selectedOptions.map((option) => (\r\n              <li key={option}>\r\n                {option} <button onClick={() => handleCancelOption(option)}>Cancel</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}