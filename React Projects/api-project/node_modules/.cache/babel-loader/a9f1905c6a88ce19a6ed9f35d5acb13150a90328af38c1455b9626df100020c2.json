{"ast":null,"code":"var _jsxFileName = \"D:\\\\important\\\\122\\\\Projects\\\\React-js-Projects\\\\React Projects\\\\api-project\\\\src\\\\Components\\\\Dropdown.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// const Dropdown = () => {\n//   const [selectedOption, setSelectedOption] = useState('');\n\n//   const handleChange = (event) => {\n//     setSelectedOption(event.target.value);\n//   };\n\n//   return (\n//     <div>\n//         <h1>Praful Task...</h1>\n//       <select value={selectedOption} onChange={handleChange}>\n//         <option value=\"\">Select an option</option>\n//         <option value=\"option1\">Soham</option>\n//         <option value=\"option2\">Praful</option>\n//         <option value=\"option3\">Bharti</option>\n//       </select>\n//       {selectedOption && <p>You selected: {selectedOption}</p>}\n//     </div>\n//   );\n// };\n\n// export default Dropdown;\n\n// Checkbox with Dropdown\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const options = [{\n    value: 'Soham',\n    label: 'Soham'\n  }, {\n    value: 'Praful',\n    label: 'Praful'\n  }, {\n    value: 'Bharti',\n    label: 'Bharti'\n  }, {\n    value: 'Pushpa',\n    label: 'Pushpa'\n  }, {\n    value: 'Ananya',\n    label: 'Ananya'\n  }, {\n    value: 'Anand',\n    label: 'Anand'\n  }];\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleCheckboxChange = (event, optionValue) => {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      setSelectedOptions([...selectedOptions, optionValue]);\n    } else {\n      setSelectedOptions(selectedOptions.filter(option => option !== optionValue));\n    }\n  };\n  const handleCancelOption = optionValue => {\n    setSelectedOptions(selectedOptions.filter(option => option !== optionValue));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      style: {\n        border: '1px solid #ccc',\n        padding: '5px',\n        cursor: 'pointer'\n      },\n      onClick: toggleDropdown,\n      children: \"Select options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-options\",\n      children: [options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: option.value,\n          checked: selectedOptions.includes(option.value),\n          onChange: event => handleCheckboxChange(event, option.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), option.label]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDropdown,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), selectedOptions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Selected options:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedOptions.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [option, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCancelOption(option),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 26\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Dropdown, \"tJ22/v69UzQHdy+7Z3XcYkTwcIQ=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dropdown","_s","isOpen","setIsOpen","selectedOptions","setSelectedOptions","options","value","label","toggleDropdown","handleCheckboxChange","event","optionValue","isChecked","target","checked","filter","option","handleCancelOption","children","className","style","border","padding","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","type","includes","onChange","length","_c","$RefreshReg$"],"sources":["D:/important/122/Projects/React-js-Projects/React Projects/api-project/src/Components/Dropdown.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// const Dropdown = () => {\r\n//   const [selectedOption, setSelectedOption] = useState('');\r\n\r\n//   const handleChange = (event) => {\r\n//     setSelectedOption(event.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//         <h1>Praful Task...</h1>\r\n//       <select value={selectedOption} onChange={handleChange}>\r\n//         <option value=\"\">Select an option</option>\r\n//         <option value=\"option1\">Soham</option>\r\n//         <option value=\"option2\">Praful</option>\r\n//         <option value=\"option3\">Bharti</option>\r\n//       </select>\r\n//       {selectedOption && <p>You selected: {selectedOption}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dropdown;\r\n\r\n\r\n// Checkbox with Dropdown\r\nimport React, { useState } from 'react';\r\n\r\nconst Dropdown = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n\r\n  const options = [\r\n    { value: 'Soham', label: 'Soham'},\r\n    { value: 'Praful', label: 'Praful' },\r\n    { value: 'Bharti', label: 'Bharti' },\r\n    { value: 'Pushpa', label: 'Pushpa'},\r\n    { value: 'Ananya', label: 'Ananya' },\r\n    { value: 'Anand', label: 'Anand' },\r\n  ];\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleCheckboxChange = (event, optionValue) => {\r\n    const isChecked = event.target.checked;\r\n\r\n    if (isChecked) {\r\n      setSelectedOptions([...selectedOptions, optionValue]);\r\n    } else {\r\n      setSelectedOptions(selectedOptions.filter((option) => option !== optionValue));\r\n    }\r\n  };\r\n\r\n  const handleCancelOption = (optionValue) => {\r\n    setSelectedOptions(selectedOptions.filter((option) => option !== optionValue));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"dropdown\"\r\n        style={{ border: '1px solid #ccc', padding: '5px', cursor: 'pointer' }}\r\n        onClick={toggleDropdown}\r\n      >\r\n        Select options\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"dropdown-options\">\r\n          {options.map((option) => (\r\n            <label key={option.value}>\r\n              <input\r\n                type=\"checkbox\"\r\n                value={option.value}\r\n                checked={selectedOptions.includes(option.value)}\r\n                onChange={(event) => handleCheckboxChange(event, option.value)}\r\n              />\r\n              {option.label}\r\n            </label>\r\n          ))}\r\n          <button onClick={toggleDropdown}>Close</button>\r\n        </div>\r\n      )}\r\n      {selectedOptions.length > 0 && (\r\n        <div>\r\n          <p>Selected options:</p>\r\n          <ul>\r\n            {selectedOptions.map((option) => (\r\n              <li key={option}>\r\n                {option} <button onClick={() => handleCancelOption(option)}>X</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}