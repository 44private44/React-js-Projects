{"ast":null,"code":"import _slicedToArray from\"D:/important/122/Projects/React-js-Projects/React Projects/TextUtilis/textutilis/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import Aboutus from'./Components/Aboutus';import Navbar from'./Components/Navbar';import TextForm from'./Components/TextForm';import React,{useState}from'react';import{BrowserRouter as Router,Route,Routes}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){// Mode State\nvar _useState=useState(\"dark\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];if(mode==='dark'){document.body.style.backgroundColor='black';}else{document.body.style.backgroundColor='white';}var toggleModeFun=function toggleModeFun(){if(mode===\"light\"){setMode(\"dark\");document.body.style.backgroundColor='black';// showAlert(\"Dark mode enable...\", \"success\");\n}else{setMode(\"light\");document.body.style.backgroundColor='white';// showAlert(\"Light mode enable...\", \"success\");\n}};// // Alert State\n// const [alert, setAlert] = useState(null);\n// const showAlert = (message, type) => {\n//   setAlert({\n//     message: message,\n//     type: type\n//   })\n// }\n// setTimeout(() => {\n//   setAlert(null);\n// }, 2500);\nreturn/*#__PURE__*/ (// Fragmentation\n_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtility\",home:\"Home\",aboutUs:\"About Us\",mode:mode,toggleMode:toggleModeFun}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",element:/*#__PURE__*/_jsx(TextForm,{mode:mode})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/AboutUs\",element:/*#__PURE__*/_jsx(Aboutus,{mode:mode})})]})]})}));}export default App;","map":{"version":3,"names":["Aboutus","Navbar","TextForm","React","useState","BrowserRouter","Router","Route","Routes","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","_useState","_useState2","_slicedToArray","mode","setMode","document","body","style","backgroundColor","toggleModeFun","children","title","home","aboutUs","toggleMode","exact","path","element"],"sources":["D:/important/122/Projects/React-js-Projects/React Projects/TextUtilis/textutilis/src/App.js"],"sourcesContent":["import './App.css';\nimport Aboutus from './Components/Aboutus';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from \"react-router-dom\";\n\nfunction App() {\n\n  // Mode State\n  const [mode, setMode] = useState(\"dark\");\n  if (mode === 'dark') {\n    document.body.style.backgroundColor = 'black';\n  }\n  else {\n    document.body.style.backgroundColor = 'white';\n  }\n  const toggleModeFun = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = 'black';\n      // showAlert(\"Dark mode enable...\", \"success\");\n    }\n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      // showAlert(\"Light mode enable...\", \"success\");\n    }\n  }\n\n  // // Alert State\n\n  // const [alert, setAlert] = useState(null);\n\n  // const showAlert = (message, type) => {\n  //   setAlert({\n  //     message: message,\n  //     type: type\n  //   })\n  // }\n  // setTimeout(() => {\n  //   setAlert(null);\n  // }, 2500);\n\n  return (\n    // Fragmentation\n    <>\n      <Router>\n        <Navbar title=\"TextUtility\" home=\"Home\" aboutUs=\"About Us\" mode={mode} toggleMode={toggleModeFun} />\n        {/* <Alertcom alert={alert} /> */}\n        <Routes>\n          <Route exact path=\"/\" element={<TextForm mode={mode} />} />\n          <Route exact path=\"/AboutUs\" element={<Aboutus mode={mode}  />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"sKAAA,MAAO,WAAW,CAClB,MAAO,CAAAA,OAAO,KAAM,sBAAsB,CAC1C,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OACEC,aAAa,GAAI,CAAAC,MAAM,CACvBC,KAAK,CACLC,MAAM,KACD,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE1B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEb;AACA,IAAAC,SAAA,CAAwBZ,QAAQ,CAAC,MAAM,CAAC,CAAAa,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAjCG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,GAAIE,IAAI,GAAK,MAAM,CAAE,CACnBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC/C,CAAC,IACI,CACHH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC/C,CACA,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAC1B,GAAIN,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7C;AACF,CAAC,IACI,CACHJ,OAAO,CAAC,OAAO,CAAC,CAChBC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7C;AACF,CACF,CAAC,CAED;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,oBACE;AACAd,IAAA,CAAAI,SAAA,EAAAY,QAAA,cACEd,KAAA,CAACN,MAAM,EAAAoB,QAAA,eACLhB,IAAA,CAACT,MAAM,EAAC0B,KAAK,CAAC,aAAa,CAACC,IAAI,CAAC,MAAM,CAACC,OAAO,CAAC,UAAU,CAACV,IAAI,CAAEA,IAAK,CAACW,UAAU,CAAEL,aAAc,CAAE,CAAC,cAEpGb,KAAA,CAACJ,MAAM,EAAAkB,QAAA,eACLhB,IAAA,CAACH,KAAK,EAACwB,KAAK,MAACC,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEvB,IAAA,CAACR,QAAQ,EAACiB,IAAI,CAAEA,IAAK,CAAE,CAAE,CAAE,CAAC,cAC3DT,IAAA,CAACH,KAAK,EAACwB,KAAK,MAACC,IAAI,CAAC,UAAU,CAACC,OAAO,cAAEvB,IAAA,CAACV,OAAO,EAACmB,IAAI,CAAEA,IAAK,CAAG,CAAE,CAAE,CAAC,EAC5D,CAAC,EACH,CAAC,CACT,CAAC,EAEP,CAEA,cAAe,CAAAJ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}