{"ast":null,"code":"var _jsxFileName = \"D:\\\\important\\\\122\\\\Projects\\\\React-js-Projects\\\\React Projects\\\\TextUtilis\\\\textutilis\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Aboutus from './Components/Aboutus';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Mode State\n  const [mode, setMode] = useState(\"dark\");\n  if (mode === 'dark') {\n    document.body.style.backgroundColor = 'black';\n  } else {\n    document.body.style.backgroundColor = 'white';\n  }\n  const toggleModeFun = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Dark mode enable...\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enable...\", \"success\");\n    }\n  };\n\n  // // Alert State\n\n  // const [alert, setAlert] = useState(null);\n\n  // const showAlert = (message, type) => {\n  //   setAlert({\n  //     message: message,\n  //     type: type\n  //   })\n  // }\n  // setTimeout(() => {\n  //   setAlert(null);\n  // }, 2500);\n\n  return (\n    /*#__PURE__*/\n    // Fragmentation\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          title: \"Text Editor\",\n          home: \"Home\",\n          aboutUs: \"About Us\",\n          mode: mode,\n          toggleMode: toggleModeFun\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/AboutUs\",\n            element: /*#__PURE__*/_jsxDEV(Aboutus, {\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  );\n}\n_s(App, \"cRsfda3HhNI8erWkNypUDuWtM+o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Aboutus","Navbar","TextForm","React","useState","BrowserRouter","Router","Route","Routes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","document","body","style","backgroundColor","toggleModeFun","showAlert","children","title","home","aboutUs","toggleMode","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["D:/important/122/Projects/React-js-Projects/React Projects/TextUtilis/textutilis/src/App.js"],"sourcesContent":["import './App.css';\nimport Aboutus from './Components/Aboutus';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from \"react-router-dom\";\n\nfunction App() {\n\n  // Mode State\n  const [mode, setMode] = useState(\"dark\");\n  if (mode === 'dark') {\n    document.body.style.backgroundColor = 'black';\n  }\n  else {\n    document.body.style.backgroundColor = 'white';\n  }\n  const toggleModeFun = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Dark mode enable...\", \"success\");\n    }\n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enable...\", \"success\");\n    }\n  }\n\n  // // Alert State\n\n  // const [alert, setAlert] = useState(null);\n\n  // const showAlert = (message, type) => {\n  //   setAlert({\n  //     message: message,\n  //     type: type\n  //   })\n  // }\n  // setTimeout(() => {\n  //   setAlert(null);\n  // }, 2500);\n\n  return (\n    // Fragmentation\n    <>\n      <Router>\n        <Navbar title=\"Text Editor\" home=\"Home\" aboutUs=\"About Us\" mode={mode} toggleMode={toggleModeFun} />\n        {/* <Alertcom alert={alert} /> */}\n        <Routes>\n          <Route path=\"/\" element={<TextForm mode={mode} />} />\n          <Route path=\"/AboutUs\" element={<Aboutus mode={mode}  />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,aAAa,IAAIC,MAAM,EACvBC,KAAK,EACLC,MAAM,QACD,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,MAAM,CAAC;EACxC,IAAIW,IAAI,KAAK,MAAM,EAAE;IACnBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;EAC/C,CAAC,MACI;IACHH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;EAC/C;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIN,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CE,SAAS,CAAC,qBAAqB,EAAE,SAAS,CAAC;IAC7C,CAAC,MACI;MACHN,OAAO,CAAC,OAAO,CAAC;MAChBC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CE,SAAS,CAAC,sBAAsB,EAAE,SAAS,CAAC;IAC9C;EACF,CAAC;;EAED;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;IAAA;IACE;IACAZ,OAAA,CAAAE,SAAA;MAAAW,QAAA,eACEb,OAAA,CAACJ,MAAM;QAAAiB,QAAA,gBACLb,OAAA,CAACT,MAAM;UAACuB,KAAK,EAAC,aAAa;UAACC,IAAI,EAAC,MAAM;UAACC,OAAO,EAAC,UAAU;UAACX,IAAI,EAAEA,IAAK;UAACY,UAAU,EAAEN;QAAc;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEpGrB,OAAA,CAACF,MAAM;UAAAe,QAAA,gBACLb,OAAA,CAACH,KAAK;YAACyB,IAAI,EAAC,GAAG;YAACC,OAAO,eAAEvB,OAAA,CAACR,QAAQ;cAACa,IAAI,EAAEA;YAAK;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACrDrB,OAAA,CAACH,KAAK;YAACyB,IAAI,EAAC,UAAU;YAACC,OAAO,eAAEvB,OAAA,CAACV,OAAO;cAACe,IAAI,EAAEA;YAAK;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,gBACT;EAAC;AAEP;AAACjB,EAAA,CAlDQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}