{"ast":null,"code":"var _jsxFileName = \"D:\\\\important\\\\122\\\\Projects\\\\React-js-Projects\\\\React Projects\\\\TextUtilis\\\\textutilis\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Aboutus from './Components/Aboutus';\nimport Alertcom from './Components/Alertcom';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Mode State\n  const [mode, setMode] = useState(\"dark\");\n  if (mode === 'dark') {\n    document.body.style.backgroundColor = 'black';\n  } else {\n    document.body.style.backgroundColor = 'white';\n  }\n  const toggleModeFun = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Dark mode enable...\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enable...\", \"success\");\n    }\n  };\n\n  // Alert State\n\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    });\n  };\n  setTimeout(() => {\n    setAlert(null);\n  }, 2500);\n  return (\n    /*#__PURE__*/\n    // Fragmentation\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          title: \"Text Editor\",\n          home: \"Home\",\n          aboutUs: \"About Us\",\n          mode: mode,\n          toggleMode: toggleModeFun\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Alertcom, {\n          alert: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  );\n}\n_s(App, \"9euTMeXml/0w6B+p2cMZGPZXrPI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Aboutus","Alertcom","Navbar","TextForm","React","useState","BrowserRouter","Router","Switch","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","document","body","style","backgroundColor","toggleModeFun","showAlert","alert","setAlert","message","type","setTimeout","children","title","home","aboutUs","toggleMode","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/important/122/Projects/React-js-Projects/React Projects/TextUtilis/textutilis/src/App.js"],"sourcesContent":["import './App.css';\nimport Aboutus from './Components/Aboutus';\nimport Alertcom from './Components/Alertcom';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n\n  // Mode State\n  const [mode, setMode] = useState(\"dark\");\n  if (mode === 'dark') {\n    document.body.style.backgroundColor = 'black';\n  }\n  else {\n    document.body.style.backgroundColor = 'white';\n  }\n  const toggleModeFun = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Dark mode enable...\", \"success\");\n    }\n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enable...\", \"success\");\n    }\n  }\n\n  // Alert State\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    })\n  }\n  setTimeout(() => {\n    setAlert(null);\n  }, 2500);\n\n  return (\n    // Fragmentation\n    <>\n      <Router>\n        <Navbar title=\"Text Editor\" home=\"Home\" aboutUs=\"About Us\" mode={mode} toggleMode={toggleModeFun} />\n        <Alertcom alert={alert} />\n        {/* <Switch>\n          <Route path=\"/about\">\n            <Aboutus />\n          </Route>\n          <Route path=\"/\">\n            <TextForm mode={mode} />\n          </Route>\n        </Switch> */}\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,IAAI,QACC,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,MAAM,CAAC;EACxC,IAAIY,IAAI,KAAK,MAAM,EAAE;IACnBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;EAC/C,CAAC,MACI;IACHH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;EAC/C;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIN,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CE,SAAS,CAAC,qBAAqB,EAAE,SAAS,CAAC;IAC7C,CAAC,MACI;MACHN,OAAO,CAAC,OAAO,CAAC;MAChBC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CE,SAAS,CAAC,sBAAsB,EAAE,SAAS,CAAC;IAC9C;EACF,CAAC;;EAED;;EAEA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMmB,SAAS,GAAGA,CAACG,OAAO,EAAEC,IAAI,KAAK;IACnCF,QAAQ,CAAC;MACPC,OAAO,EAAEA,OAAO;MAChBC,IAAI,EAAEA;IACR,CAAC,CAAC;EACJ,CAAC;EACDC,UAAU,CAAC,MAAM;IACfH,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC,EAAE,IAAI,CAAC;EAER;IAAA;IACE;IACAd,OAAA,CAAAE,SAAA;MAAAgB,QAAA,eACElB,OAAA,CAACL,MAAM;QAAAuB,QAAA,gBACLlB,OAAA,CAACV,MAAM;UAAC6B,KAAK,EAAC,aAAa;UAACC,IAAI,EAAC,MAAM;UAACC,OAAO,EAAC,UAAU;UAAChB,IAAI,EAAEA,IAAK;UAACiB,UAAU,EAAEX;QAAc;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpG1B,OAAA,CAACX,QAAQ;UAACwB,KAAK,EAAEA;QAAM;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASpB;IAAC,gBACT;EAAC;AAEP;AAACtB,EAAA,CAtDQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}