{"ast":null,"code":"var _jsxFileName = \"D:\\\\important\\\\122\\\\Projects\\\\React-js-Projects\\\\React Projects\\\\todos-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Mode State\n  const [mode, setMode] = useState(\"Dark\");\n  const toggleModeFun = () => {\n    if (mode === \"Dark\") {\n      setMode(\"Light\");\n    } else {\n      setMode(\"Dark\");\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // Fragmentation\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Text Editor\",\n        home: \"Home\",\n        aboutUs: \"About Us\",\n        mode: mode,\n        toggleMode: toggleModeFun\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n_s(App, \"Q/58ddcvlmq04MzmskpzpBtcKiw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","toggleModeFun","children","title","home","aboutUs","toggleMode","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/important/122/Projects/React-js-Projects/React Projects/todos-list/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, {useState} from 'react'\n\n\nfunction App() {\n\n  // Mode State\n  const [mode, setMode] = useState(\"Dark\");\n\n  const toggleModeFun = () => {\n    if(mode === \"Dark\")\n    {\n      setMode(\"Light\");\n    }\n    else{\n      setMode(\"Dark\");\n    }\n  }\n\n  return (\n    // Fragmentation\n    <>\n      <Navbar title=\"Text Editor\" home=\"Home\" aboutUs=\"About Us\" mode={mode} toggleMode={toggleModeFun} />\n      <TextForm />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGrC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;EAExC,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAGF,IAAI,KAAK,MAAM,EAClB;MACEC,OAAO,CAAC,OAAO,CAAC;IAClB,CAAC,MACG;MACFA,OAAO,CAAC,MAAM,CAAC;IACjB;EACF,CAAC;EAED;IAAA;IACE;IACAN,OAAA,CAAAE,SAAA;MAAAM,QAAA,gBACER,OAAA,CAACL,MAAM;QAACc,KAAK,EAAC,aAAa;QAACC,IAAI,EAAC,MAAM;QAACC,OAAO,EAAC,UAAU;QAACN,IAAI,EAAEA,IAAK;QAACO,UAAU,EAAEL;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpGhB,OAAA,CAACJ,QAAQ;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACZ;EAAC;AAEP;AAACZ,EAAA,CAtBQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}