{"ast":null,"code":"var _jsxFileName = \"D:\\\\important\\\\122\\\\Projects\\\\React-js-Projects\\\\React Projects\\\\todos-list\\\\src\\\\Components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm() {\n  _s();\n  const updateText = event => {\n    setText(event.target.value);\n  };\n  const convertUpper = () => {\n    let newtext = text.toUpperCase().replace(/\\s+/g, \" \");\n    setText(newtext);\n  };\n  const convertLower = () => {\n    let newtext = text.toLowerCase().replace(/\\s+/g, \" \");\n    setText(newtext);\n  };\n  const removeSpace = () => {\n    const newText = text.replace(/\\s+/g, \" \");\n    setText(newText);\n  };\n  const reverseText = () => {\n    const newText = text.split(\" \").reverse().join(\" \").replace(/\\s+/g, \" \");\n    setText(newText);\n  };\n  const clearText = () => {\n    setText('');\n  };\n  const [text, setText] = useState(\"\"); // State used this\n  // text = \"change text\";   // wrong method *\n  // settext(\"changed text\"); // right method *\n\n  const [modeColor, setModeColor] = useState({\n    color: 'black',\n    backgroundColor: 'white'\n  });\n  const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\n  const changeMode = () => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Enter Text below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"\",\n          rows: \"15\",\n          value: text,\n          onChange: updateText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: convertUpper,\n        children: \"Convert to UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary ms-2\",\n        onClick: convertLower,\n        children: \"Convert to LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary ms-2\",\n        onClick: removeSpace,\n        children: \"Remove Extra Space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary ms-2\",\n        onClick: reverseText,\n        children: \"Inverse String\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary ms-2\",\n        onClick: clearText,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-dark mt-4\",\n      onClick: changeMode,\n      children: btnText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Text Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), (() => {\n        if (text.length === 0) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \" 0 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 38\n              }, this), \" word and \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\" \", text.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 58\n              }, this), \" character \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \" 0 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 29\n              }, this), \" Minute take time to read \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true);\n        } else {\n          const wordcount = text.split(/\\s+/).filter(word => word !== \"\").length;\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"  \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [wordcount, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 40\n              }, this), \" word and \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [\" \", text.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 69\n              }, this), \" character \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: (0.008 * wordcount).toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 29\n              }, this), \" Minute take time to read \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this), \" \"]\n          }, void 0, true);\n        }\n      })(), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), (() => {\n        if (text.length === 0) {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" No Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 32\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 32\n          }, this);\n        }\n      })()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"D9hFIrjKZ6xzqBRf5Wwes+DQlXQ=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","_s","updateText","event","setText","target","value","convertUpper","newtext","text","toUpperCase","replace","convertLower","toLowerCase","removeSpace","newText","reverseText","split","reverse","join","clearText","modeColor","setModeColor","color","backgroundColor","btnText","setBtnText","changeMode","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","rows","onChange","onClick","length","wordcount","filter","word","toFixed","_c","$RefreshReg$"],"sources":["D:/important/122/Projects/React-js-Projects/React Projects/todos-list/src/Components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function TextForm() {\r\n\r\n    const updateText = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const convertUpper = () => {\r\n\r\n        let newtext = text.toUpperCase().replace(/\\s+/g, \" \");\r\n        setText(newtext);\r\n\r\n    }\r\n    const convertLower = () => {\r\n        let newtext = text.toLowerCase().replace(/\\s+/g, \" \");\r\n        setText(newtext);\r\n    }\r\n    \r\n    const removeSpace = () => {\r\n        const newText = text.replace(/\\s+/g, \" \");\r\n        setText(newText);\r\n    }\r\n    const reverseText = () => {\r\n        const newText = text.split(\" \").reverse().join(\" \").replace(/\\s+/g, \" \");\r\n        setText(newText);\r\n    }\r\n    \r\n    const clearText = () => {\r\n        setText('');\r\n    }\r\n\r\n    const [text, setText] = useState(\"\"); // State used this\r\n    // text = \"change text\";   // wrong method *\r\n    // settext(\"changed text\"); // right method *\r\n\r\n    const [modeColor, setModeColor] = useState({\r\n        color : 'black',\r\n        backgroundColor : 'white'\r\n    });\r\n    const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\r\n\r\n    const changeMode = () => {\r\n      \r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className='mt-3'>\r\n                <div className=\"mb-3\">\r\n                    <h3> Enter Text below</h3>\r\n                    <textarea className=\"form-control\" id=\"\" rows=\"15\" value={text} onChange={updateText}></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary\" onClick={convertUpper}>Convert to UpperCase</button>\r\n                <button className=\"btn btn-primary ms-2\" onClick={convertLower}>Convert to LowerCase</button>\r\n                <button className=\"btn btn-primary ms-2\" onClick={removeSpace}>Remove Extra Space</button>\r\n                <button className=\"btn btn-primary ms-2\" onClick={reverseText}>Inverse String</button>\r\n                <button className=\"btn btn-primary ms-2\" onClick={clearText}>Clear Text</button>\r\n            </div>\r\n\r\n            <button className=\"btn btn-dark mt-4\" onClick={changeMode}>{btnText}</button>\r\n\r\n            <div className=\"container mt-3\">\r\n                <h3>\r\n                    Text Details\r\n                </h3>\r\n\r\n                {(() => {\r\n                    if (text.length === 0) {\r\n                        return <><p> <b> 0 </b> word and <b> {text.length}</b> character </p>\r\n                        <p> <b> 0 </b> Minute take time to read </p>\r\n                        </>\r\n                    }\r\n                    else {\r\n                        const wordcount = text.split(/\\s+/).filter(word => word !== \"\").length;\r\n                        return <>  <p> <b>{wordcount} </b> word and <b> {text.length}</b> character </p>\r\n                        <p> <b>{(0.008 * wordcount).toFixed(2)}</b> Minute take time to read </p> </>\r\n                    }\r\n                })()}\r\n                \r\n                <h3>Preview</h3>\r\n                {/* Ternery operator*/}\r\n                {/* <div>\r\n                    {text.length === 0 ? ( <p> No Text </p>) : ( <p> {text}</p>)}\r\n                </div> */}\r\n\r\n                {/* if-else text available or not  */}\r\n                {(() => {\r\n                    if (text.length === 0) {\r\n                        return <p> No Text</p>\r\n                    }\r\n                    else {\r\n                        return <p>{text}</p>\r\n                    }\r\n                })()}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAE/B,MAAMC,UAAU,GAAIC,KAAK,IAAK;IAC1BC,OAAO,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IAEvB,IAAIC,OAAO,GAAGC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IACrDP,OAAO,CAACI,OAAO,CAAC;EAEpB,CAAC;EACD,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIJ,OAAO,GAAGC,IAAI,CAACI,WAAW,CAAC,CAAC,CAACF,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IACrDP,OAAO,CAACI,OAAO,CAAC;EACpB,CAAC;EAED,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,OAAO,GAAGN,IAAI,CAACE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IACzCP,OAAO,CAACW,OAAO,CAAC;EACpB,CAAC;EACD,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMD,OAAO,GAAGN,IAAI,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAACR,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IACxEP,OAAO,CAACW,OAAO,CAAC;EACpB,CAAC;EAED,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACpBhB,OAAO,CAAC,EAAE,CAAC;EACf,CAAC;EAED,MAAM,CAACK,IAAI,EAAEL,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC;EACA;;EAEA,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC;IACvC4B,KAAK,EAAG,OAAO;IACfC,eAAe,EAAG;EACtB,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,kBAAkB,CAAC;EAE1D,MAAMgC,UAAU,GAAGA,CAAA,KAAM,CAEzB,CAAC;EAED,oBACI9B,OAAA,CAAAE,SAAA;IAAA6B,QAAA,gBACI/B,OAAA;MAAKgC,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjB/B,OAAA;QAAKgC,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACjB/B,OAAA;UAAA+B,QAAA,EAAI;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BpC,OAAA;UAAUgC,SAAS,EAAC,cAAc;UAACK,EAAE,EAAC,EAAE;UAACC,IAAI,EAAC,IAAI;UAAC7B,KAAK,EAAEG,IAAK;UAAC2B,QAAQ,EAAElC;QAAW;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChG,CAAC,eACNpC,OAAA;QAAQgC,SAAS,EAAC,iBAAiB;QAACQ,OAAO,EAAE9B,YAAa;QAAAqB,QAAA,EAAC;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxFpC,OAAA;QAAQgC,SAAS,EAAC,sBAAsB;QAACQ,OAAO,EAAEzB,YAAa;QAAAgB,QAAA,EAAC;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7FpC,OAAA;QAAQgC,SAAS,EAAC,sBAAsB;QAACQ,OAAO,EAAEvB,WAAY;QAAAc,QAAA,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1FpC,OAAA;QAAQgC,SAAS,EAAC,sBAAsB;QAACQ,OAAO,EAAErB,WAAY;QAAAY,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtFpC,OAAA;QAAQgC,SAAS,EAAC,sBAAsB;QAACQ,OAAO,EAAEjB,SAAU;QAAAQ,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E,CAAC,eAENpC,OAAA;MAAQgC,SAAS,EAAC,mBAAmB;MAACQ,OAAO,EAAEV,UAAW;MAAAC,QAAA,EAAEH;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAE7EpC,OAAA;MAAKgC,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC3B/B,OAAA;QAAA+B,QAAA,EAAI;MAEJ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAEJ,CAAC,MAAM;QACJ,IAAIxB,IAAI,CAAC6B,MAAM,KAAK,CAAC,EAAE;UACnB,oBAAOzC,OAAA,CAAAE,SAAA;YAAA6B,QAAA,gBAAE/B,OAAA;cAAA+B,QAAA,GAAG,GAAC,eAAA/B,OAAA;gBAAA+B,QAAA,EAAG;cAAG;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,cAAU,eAAApC,OAAA;gBAAA+B,QAAA,GAAG,GAAC,EAACnB,IAAI,CAAC6B,MAAM;cAAA;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAAW;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACrEpC,OAAA;cAAA+B,QAAA,GAAG,GAAC,eAAA/B,OAAA;gBAAA+B,QAAA,EAAG;cAAG;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,8BAA0B;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA,eAC1C,CAAC;QACP,CAAC,MACI;UACD,MAAMM,SAAS,GAAG9B,IAAI,CAACQ,KAAK,CAAC,KAAK,CAAC,CAACuB,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAK,EAAE,CAAC,CAACH,MAAM;UACtE,oBAAOzC,OAAA,CAAAE,SAAA;YAAA6B,QAAA,GAAE,IAAE,eAAA/B,OAAA;cAAA+B,QAAA,GAAG,GAAC,eAAA/B,OAAA;gBAAA+B,QAAA,GAAIW,SAAS,EAAC,GAAC;cAAA;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,cAAU,eAAApC,OAAA;gBAAA+B,QAAA,GAAG,GAAC,EAACnB,IAAI,CAAC6B,MAAM;cAAA;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAAW;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAChFpC,OAAA;cAAA+B,QAAA,GAAG,GAAC,eAAA/B,OAAA;gBAAA+B,QAAA,EAAI,CAAC,KAAK,GAAGW,SAAS,EAAEG,OAAO,CAAC,CAAC;cAAC;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,8BAA0B;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,KAAC;UAAA,eAAE,CAAC;QACjF;MACJ,CAAC,EAAE,CAAC,eAEJpC,OAAA;QAAA+B,QAAA,EAAI;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAOf,CAAC,MAAM;QACJ,IAAIxB,IAAI,CAAC6B,MAAM,KAAK,CAAC,EAAE;UACnB,oBAAOzC,OAAA;YAAA+B,QAAA,EAAG;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAC1B,CAAC,MACI;UACD,oBAAOpC,OAAA;YAAA+B,QAAA,EAAInB;UAAI;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QACxB;MACJ,CAAC,EAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACR,CAAC;AAEX;AAAChC,EAAA,CAhGuBD,QAAQ;AAAA2C,EAAA,GAAR3C,QAAQ;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}