{"ast":null,"code":"var _jsxFileName = \"D:\\\\important\\\\122\\\\Projects\\\\React-js-Projects\\\\React Projects\\\\todos-list\\\\src\\\\Components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm() {\n  _s();\n  const updateText = event => {\n    setText(event.target.value);\n  };\n  const convertUpper = () => {\n    let newtext = text.toUpperCase().replace(/\\s+/g, \" \");\n    setText(newtext);\n  };\n  const convertLower = () => {\n    let newtext = text.toLowerCase().replace(/\\s+/g, \" \");\n    setText(newtext);\n  };\n  const removeSpace = () => {\n    const newText = text.replace(/\\s+/g, \" \");\n    setText(newText);\n  };\n  const reverseText = () => {\n    const newText = text.split(\" \").reverse().join(\" \").replace(/\\s+/g, \" \");\n    setText(newText);\n  };\n  const clearText = () => {\n    setText('');\n  };\n\n  // Textarea set text State\n  const [text, setText] = useState(\"\"); // State used this\n  // text = \"change text\";   // wrong method *\n  // settext(\"changed text\"); // right method *\n\n  // Mode change color State\n  const [modeColor, setModeColor] = useState({\n    color: 'black',\n    backgroundColor: '#d7d7d7'\n  });\n\n  // Mode change text State\n\n  const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\n  const changeMode = () => {\n    if (modeColor.backgroundColor === '#d7d7d7') {\n      setModeColor({\n        color: 'white',\n        backgroundColor: 'black'\n      });\n      setBtnText(\"Enabled Light Mode\");\n    } else {\n      setModeColor({\n        color: 'black',\n        backgroundColor: '#d7d7d7'\n      });\n      setBtnText(\"Enabled Dark Mode\");\n    }\n  };\n\n  // Copy State\n  const [copyText, setCopyText] = useState(\"Copy\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modeColor,\n      className: \"textFormMainDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Enter Text below\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-dark copyBtn\",\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"\",\n            rows: \"15\",\n            value: text,\n            onChange: updateText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: convertUpper,\n          children: \"Convert to UpperCase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary ms-2\",\n          onClick: convertLower,\n          children: \"Convert to LowerCase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary ms-2\",\n          onClick: removeSpace,\n          children: \"Remove Extra Space\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary ms-2\",\n          onClick: reverseText,\n          children: \"Inverse String\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary ms-2\",\n          onClick: clearText,\n          children: \"Clear Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark mt-4\",\n        onClick: changeMode,\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Text Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), (() => {\n          if (text.length === 0) {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \" 0 \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 42\n                }, this), \" word and \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [\" \", text.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 62\n                }, this), \" character \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \" 0 \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this), \" Minute take time to read \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true);\n          } else {\n            const wordcount = text.split(/\\s+/).filter(word => word !== \"\").length;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"  \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [wordcount, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 44\n                }, this), \" word and \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [\" \", text.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 73\n                }, this), \" character \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 40\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: (0.008 * wordcount).toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 37\n                }, this), \" Minute take time to read \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true);\n          }\n        })(), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), (() => {\n          if (text.length === 0) {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" No Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 36\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 36\n            }, this);\n          }\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(TextForm, \"KrAA/1v8dpzz9mWV1ur8X/9ZYIk=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","_s","updateText","event","setText","target","value","convertUpper","newtext","text","toUpperCase","replace","convertLower","toLowerCase","removeSpace","newText","reverseText","split","reverse","join","clearText","modeColor","setModeColor","color","backgroundColor","btnText","setBtnText","changeMode","copyText","setCopyText","children","style","className","fileName","_jsxFileName","lineNumber","columnNumber","id","rows","onChange","onClick","length","wordcount","filter","word","toFixed","_c","$RefreshReg$"],"sources":["D:/important/122/Projects/React-js-Projects/React Projects/todos-list/src/Components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function TextForm() {\r\n\r\n    const updateText = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const convertUpper = () => {\r\n\r\n        let newtext = text.toUpperCase().replace(/\\s+/g, \" \");\r\n        setText(newtext);\r\n\r\n    }\r\n    const convertLower = () => {\r\n        let newtext = text.toLowerCase().replace(/\\s+/g, \" \");\r\n        setText(newtext);\r\n    }\r\n\r\n    const removeSpace = () => {\r\n        const newText = text.replace(/\\s+/g, \" \");\r\n        setText(newText);\r\n    }\r\n    const reverseText = () => {\r\n        const newText = text.split(\" \").reverse().join(\" \").replace(/\\s+/g, \" \");\r\n        setText(newText);\r\n    }\r\n\r\n    const clearText = () => {\r\n        setText('');\r\n    }\r\n\r\n    // Textarea set text State\r\n    const [text, setText] = useState(\"\"); // State used this\r\n    // text = \"change text\";   // wrong method *\r\n    // settext(\"changed text\"); // right method *\r\n\r\n    // Mode change color State\r\n    const [modeColor, setModeColor] = useState({\r\n        color: 'black',\r\n        backgroundColor: '#d7d7d7'\r\n    });\r\n\r\n    // Mode change text State\r\n\r\n    const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\r\n\r\n    const changeMode = () => {\r\n        if (modeColor.backgroundColor === '#d7d7d7') {\r\n            setModeColor({\r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n            });\r\n            setBtnText(\"Enabled Light Mode\");\r\n        } else {\r\n            setModeColor({\r\n                color: 'black',\r\n                backgroundColor: '#d7d7d7'\r\n            });\r\n            setBtnText(\"Enabled Dark Mode\");\r\n        }\r\n    }\r\n\r\n    // Copy State\r\n    const [copyText, setCopyText] = useState(\"Copy\");\r\n    return (\r\n        <>\r\n            <div style={modeColor} className='textFormMainDiv'>\r\n                <div className='mt-3'>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <h3> Enter Text below</h3>\r\n                        <button className=\"btn btn-dark copyBtn\">Copy</button>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <textarea className=\"form-control\" id=\"\" rows=\"15\" value={text} onChange={updateText}></textarea>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\" onClick={convertUpper}>Convert to UpperCase</button>\r\n                    <button className=\"btn btn-primary ms-2\" onClick={convertLower}>Convert to LowerCase</button>\r\n                    <button className=\"btn btn-primary ms-2\" onClick={removeSpace}>Remove Extra Space</button>\r\n                    <button className=\"btn btn-primary ms-2\" onClick={reverseText}>Inverse String</button>\r\n                    <button className=\"btn btn-primary ms-2\" onClick={clearText}>Clear Text</button>\r\n                </div>\r\n\r\n                <button className=\"btn btn-dark mt-4\" onClick={changeMode}>{btnText}</button>\r\n\r\n                <div className=\"mt-3\">\r\n                    <h3>\r\n                        Text Details\r\n                    </h3>\r\n\r\n                    {(() => {\r\n                        if (text.length === 0) {\r\n                            return <><p> <b> 0 </b> word and <b> {text.length}</b> character </p>\r\n                                <p> <b> 0 </b> Minute take time to read </p>\r\n                            </>\r\n                        }\r\n                        else {\r\n                            const wordcount = text.split(/\\s+/).filter(word => word !== \"\").length;\r\n                            return <>  <p> <b>{wordcount} </b> word and <b> {text.length}</b> character </p>\r\n                                <p> <b>{(0.008 * wordcount).toFixed(2)}</b> Minute take time to read </p> </>\r\n                        }\r\n                    })()}\r\n\r\n                    <h3>Preview</h3>\r\n                    {/* Ternery operator*/}\r\n                    {/* <div>\r\n                    {text.length === 0 ? ( <p> No Text </p>) : ( <p> {text}</p>)}\r\n                </div> */}\r\n\r\n                    {/* if-else text available or not  */}\r\n                    {(() => {\r\n                        if (text.length === 0) {\r\n                            return <p> No Text</p>\r\n                        }\r\n                        else {\r\n                            return <p>{text}</p>\r\n                        }\r\n                    })()}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}