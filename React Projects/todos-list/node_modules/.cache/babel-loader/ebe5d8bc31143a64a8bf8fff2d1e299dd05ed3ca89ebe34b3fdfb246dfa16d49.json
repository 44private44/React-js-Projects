{"ast":null,"code":"var _jsxFileName = \"D:\\\\important\\\\122\\\\Projects\\\\React-js-Projects\\\\React Projects\\\\todos-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Mode State\n  const [mode, setMode] = useState(\"light\");\n  const toggleModeFun = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = 'green';\n    } else {\n      setMode(\"light\");\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // Fragmentation\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Text Editor\",\n        home: \"Home\",\n        aboutUs: \"About Us\",\n        mode: mode,\n        toggleMode: toggleModeFun\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n_s(App, \"ckwlr2Ue1/16M01etSJDlsATeMQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","toggleModeFun","document","body","style","backgroundColor","children","title","home","aboutUs","toggleMode","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/important/122/Projects/React-js-Projects/React Projects/todos-list/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, {useState} from 'react'\n\n\nfunction App() {\n\n  // Mode State\n  const [mode, setMode] = useState(\"light\");\n\n  const toggleModeFun = () => {\n    if(mode === \"light\")\n    {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = 'green';\n    }\n    else{\n      setMode(\"light\");\n    }\n  }\n\n  return (\n    // Fragmentation\n    <>\n      <Navbar title=\"Text Editor\" home=\"Home\" aboutUs=\"About Us\" mode={mode} toggleMode={toggleModeFun} />\n      <TextForm />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGrC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAGF,IAAI,KAAK,OAAO,EACnB;MACEC,OAAO,CAAC,MAAM,CAAC;MACfE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;IAC/C,CAAC,MACG;MACFL,OAAO,CAAC,OAAO,CAAC;IAClB;EACF,CAAC;EAED;IAAA;IACE;IACAN,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACEZ,OAAA,CAACL,MAAM;QAACkB,KAAK,EAAC,aAAa;QAACC,IAAI,EAAC,MAAM;QAACC,OAAO,EAAC,UAAU;QAACV,IAAI,EAAEA,IAAK;QAACW,UAAU,EAAET;MAAc;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpGpB,OAAA,CAACJ,QAAQ;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACZ;EAAC;AAEP;AAAChB,EAAA,CAvBQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}